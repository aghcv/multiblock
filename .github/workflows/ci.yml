name: Build and Test (CMake + Ninja)

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    name: Build and Test (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
      # 1️⃣ Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ Install dependencies
      - name: Install dependencies
        run: |
          if [[ "$RUNNER_OS" == "Linux" ]]; then
            sudo apt-get update
            sudo apt-get install -y cmake ninja-build libtbb-dev zlib1g-dev libopenvdb-dev libgtest-dev libvtk-dev
            # Compile gtest static libs if not prebuilt
            if [ ! -f /usr/lib/libgtest.a ]; then
              cd /usr/src/gtest
              sudo cmake .
              sudo make
              sudo cp *.a /usr/lib
            fi
          elif [[ "$RUNNER_OS" == "macOS" ]]; then
            brew update
            brew install cmake ninja openvdb tbb vtk
          fi

      # 3️⃣ Configure (CMake)
      # 3️⃣ Clean previous build artifacts (prevent CMakeCache mismatch on runners)
      - name: Clean previous build artifacts
        run: |
          echo "Removing any pre-existing build directory and CMake cache files"
          rm -rf build
          rm -f CMakeCache.txt
          rm -rf CMakeFiles

      - name: Configure CMake
        run: cmake -S . -B build -G Ninja -DCMAKE_BUILD_TYPE=Release

      # 4️⃣ Build (Ninja)
      - name: Build
        run: cmake --build build --config Release

      # 5️⃣ Run Tests (CTest)
      - name: Run unit tests
        run: |
          cd build
          ctest --output-on-failure --verbose
